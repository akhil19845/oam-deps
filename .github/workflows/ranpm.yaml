name: Submodule ranpm CI

on:
  push:
    branches:
      - devops
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    # Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: true

    # Set up Java 
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Download settings.xml at .m2 Directory
      run: |
        cd 
        ls -la
        cd .m2
        rm settings.xml
        wget https://git.onap.org/oparent/plain/settings.xml
        ls -la
        
    - name: Install xmlstarlet
      run: |
        sudo apt install xmlstarlet -y
        
    - name: Build ranpm Docker Images For Directory pmproducer
      run: |
        ls -la
        cd deps/ranpm
        ls -la
        cd pmproducer
        ls -la
        mvn clean install -Dmaven.test.skip=true
        mvn install docker:build -Dmaven.test.skip=true
        ls -la
        docker images
        docker tag o-ran-sc/nonrtric-plt-pmproducer:latest ghcr.io/sknrao/nonrtric-plt-pmproducer:latest
      # docker push ghcr.io/sknrao/nonrtric-plt-pmproducer:latest

    - name: Build ranpm Docker Images For Directory influxlogger
      run: |
        ls -la
        cd deps/ranpm
        ls -la
        cd influxlogger
        ls -la
        mvn clean install -Dmaven.test.skip=true
        mvn install docker:build -Dmaven.test.skip=true
        ls -la
        docker images
        docker tag o-ran-sc/nonrtric-plt-pmlog:latest ghcr.io/sknrao/nonrtric-plt-pmlog:latest
      # docker push ghcr.io/sknrao/nonrtric-plt-pmlog:latest

    - name: Build ranpm Docker Images For Directory pm-file-converter
      run: |
        ls -la
        cd deps/ranpm
        ls -la
        cd pm-file-converter
        ls -la
        cat build.sh
        # chmod +x build.sh
        # ./build.sh ghcr.io/ios-mcn-smo --tag 1.2.0
        # ls -la
        # mvn clean install -Dmaven.test.skip=true
        # mvn install docker:build -Dmaven.test.skip=true
        # ls -la
        # docker images
